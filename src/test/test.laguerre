/* -*-C-*- */
/******************************************************************
 * Copyright (c) 2000-2018, 2019 S.Bhatnagar
 *
 *  This file is part of fussy.
 *
 *  fussy is a free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  fussy is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with fussy.  If not, see <https://www.gnu.org/licenses/>.
 *

  History:

    First version.

               Sanjay Bhatnagar, Dec 2001
               sanjay@ncra.tifr.res.in

******************************************************************/
/*
    Recursive generating formula for Laguerre polynomial and it's
    derivative.

    Shows that f(n,x).rms == (df(n,x).val*x.rms) (which is
    f'(n,x)*deltaX) 
*/

f(n,x)
{
  /* return ((2*n-1-x)*f(n-1,x)-(n-1)*f(n-2,x))/n; */
  /* Code below is a version of the above expression, written using partial variables */
  auto p0,p1,p2;
  if (n<=0) return 1;
  if (n==1) return 1-x;

  p0:=(2*n-1-x);
  p1:=f(n-1,x);
  p2:=(n-1)*f(n-2,x);
  return (p0*p1-p2)/n;
}

df(n,x)
{
  /*  return (n*f(n,x)-n*f(n-1,x))/x;*/
  /* Code below is a version of the above expression, written using partial variables */
  auto n0,n1;
  n0:=n*f(n,x);
  n1:=n*f(n-1,x);
  return (n0-n1)/x;
}

test(x)
{
   auto n,i,y;
   for(i=1;i<10;i++) {print "l(",i%-6.2f,",",x%-6.2f,")= ",f(i,x)," ",fabs(df(i,x).val*x.rms),"\n";};
}

test(3pm1);
